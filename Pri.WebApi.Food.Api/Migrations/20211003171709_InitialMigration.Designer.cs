// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.WebApi.Food.Api.Data;

namespace Pri.WebApi.Food.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211003171709_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pri.WebApi.Food.Api.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(90),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(284),
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(453),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(454),
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(456),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(457),
                            Name = "Groenten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(460),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(461),
                            Name = "Fruit"
                        });
                });

            modelBuilder.Entity("Pri.WebApi.Food.Api.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8538),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8541),
                            Name = "Peperoni"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8547),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8548),
                            Name = "Hawai"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8551),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8552),
                            Name = "Macaroni"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8555),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8556),
                            Name = "Spaghetti"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8559),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8560),
                            Name = "Komkommer"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8602),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8603),
                            Name = "Tomaat"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8607),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8608),
                            Name = "Appel"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8612),
                            LastEditedOn = new DateTime(2021, 10, 3, 17, 17, 9, 266, DateTimeKind.Utc).AddTicks(8613),
                            Name = "Peer"
                        });
                });

            modelBuilder.Entity("Pri.WebApi.Food.Api.Entities.Product", b =>
                {
                    b.HasOne("Pri.WebApi.Food.Api.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
