// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.WebApi.Food.Api.Data;

namespace Pri.WebApi.Food.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211003125100_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pri.WebApi.Food.Api.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2145),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2332),
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2489),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2490),
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2493),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2493),
                            Name = "Groenten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2496),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 213, DateTimeKind.Utc).AddTicks(2496),
                            Name = "Fruit"
                        });
                });

            modelBuilder.Entity("Pri.WebApi.Food.Api.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(176),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(179),
                            Name = "Pepperoni"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(186),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(187),
                            Name = "Hawai"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(190),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(191),
                            Name = "Macaroni"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(194),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(195),
                            Name = "Spaghetti"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(198),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(199),
                            Name = "Komkommer"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(202),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(203),
                            Name = "Tomaat"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(206),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(207),
                            Name = "Appel"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(210),
                            LastEditedOn = new DateTime(2021, 10, 3, 12, 51, 0, 214, DateTimeKind.Utc).AddTicks(211),
                            Name = "Peer"
                        });
                });

            modelBuilder.Entity("Pri.WebApi.Food.Api.Entities.Product", b =>
                {
                    b.HasOne("Pri.WebApi.Food.Api.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
